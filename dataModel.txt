DATA MODELS AND FUNCTIONALITY
Data Model Summary
The model below shows the structure of data as saved in the mongoDB database.

// User Objects
Each object within the users object represents an app user. Users are instantiated with an _id and a 'decks' property. The key and value of _id are both automatically instantiated by mongoDB (this application does not provide the id or invoke its creation in code). 

// Decks Array
The 'decks' property value is an array of objects. Each object within the decks array represents a different deck for the user. When the user is first created, the decks property has a value of an empty array.

//  

Note: 'users' below represents the users collection in the database cluster. This user collection is shown as an object in the model that follows, but it's not certain that mongoDB collections are themselves objects or some other type of data structure entirely. The application should function fine without this knowledge.

Data Model:
users : {
  {
    _id: ObjectId
    userName: “john”,
    decks: [
      {
        topic: "deck topic a",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      },
      {
        topic: "deck topic b",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      },
      {
        topic: "deck topic c",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      }
    ]
  },
  {
    _id: ObjectId,
    userName: jane,
    decks: [
      {
        topic: "deck topic a",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      },
      {
        topic: "deck topic b",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      },
      {
        topic: "deck topic c",
        cards: [
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },
          { id: Number, question: “question”, answer: “answer” },	
        ]
      }
    ]
  },
}

Functionality
